# PIPELINE DEFINITION
# Name: mnist-prediction-pipeline
# Description: A pipeline to predict digits using MNIST model from MinIO
# Inputs:
#    access_key: str
#    s3_bucket: str
#    s3_endpoint: str
#    secret_key: str
components:
  comp-predict-model:
    executorLabel: exec-predict-model
    inputDefinitions:
      parameters:
        access_key:
          parameterType: STRING
        s3_bucket:
          parameterType: STRING
        s3_endpoint:
          parameterType: STRING
        secret_key:
          parameterType: STRING
    outputDefinitions:
      parameters:
        predictions:
          parameterType: LIST
deploymentSpec:
  executors:
    exec-predict-model:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - predict_model
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.10.1'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'tensorflow'\
          \ 'numpy' 'boto3' && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef predict_model(\n    s3_bucket: str, \n    s3_endpoint: str, \n\
          \    access_key: str, \n    secret_key: str\n) -> NamedTuple('Outputs',\
          \ [('predictions', list)]):\n    \"\"\"\n    Predict using the trained model\
          \ on the input batch data loaded from MinIO.\n    \"\"\"\n\n    from typing\
          \ import NamedTuple\n    from kfp import dsl, compiler\n    import numpy\
          \ as np\n    import boto3\n    from tensorflow.keras.models import load_model\n\
          \    import io\n    # Initialize the S3 client\n    s3 = boto3.client(\n\
          \        's3',\n        endpoint_url=s3_endpoint,\n        aws_access_key_id=access_key,\n\
          \        aws_secret_access_key=secret_key\n    )\n\n    # Download the model\
          \ from MinIO\n    model_key = \"sushant_model/mnist_model.h5\"  # Path to\
          \ the model in MinIO\n    model_buffer = io.BytesIO()\n\n    try:\n    \
          \    s3.download_fileobj(s3_bucket, model_key, model_buffer)\n        model_buffer.seek(0)\
          \  # Rewind the buffer to the beginning before loading the model\n     \
          \   model = load_model(model_buffer)\n    except Exception as e:\n     \
          \   print(f\"Error downloading model from MinIO: {e}\")\n        raise\n\
          \n    # Fetch the latest data (batch_data, labels) from the get_latest_data\
          \ component\n    latest_data = get_latest_data(s3_bucket=s3_bucket, s3_endpoint=s3_endpoint,\
          \ access_key=access_key, secret_key=secret_key, batch_size=10)\n    batch_data\
          \ = latest_data.batch_data\n    batch_data = np.array(batch_data)  # Convert\
          \ the batch data to a NumPy array\n\n    # Make predictions on the batch\
          \ data\n    predictions = model.predict(batch_data)\n\n    # Get the predicted\
          \ classes (digits) for each item in the batch\n    predicted_classes = np.argmax(predictions,\
          \ axis=1).tolist()\n\n    print(f\"The predicted class is {predicted_classes}\"\
          )\n    # Return the predictions as a list\n    return (predicted_classes,)\n\
          \n"
        image: tensorflow/tensorflow:latest
pipelineInfo:
  description: A pipeline to predict digits using MNIST model from MinIO
  name: mnist-prediction-pipeline
root:
  dag:
    tasks:
      predict-model:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-predict-model
        inputs:
          parameters:
            access_key:
              componentInputParameter: access_key
            s3_bucket:
              componentInputParameter: s3_bucket
            s3_endpoint:
              componentInputParameter: s3_endpoint
            secret_key:
              componentInputParameter: secret_key
        taskInfo:
          name: Digit Prediction
  inputDefinitions:
    parameters:
      access_key:
        parameterType: STRING
      s3_bucket:
        parameterType: STRING
      s3_endpoint:
        parameterType: STRING
      secret_key:
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.10.1
